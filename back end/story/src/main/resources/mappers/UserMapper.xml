<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性值通常设置为：包名 + SQL映射文件名来指定唯一的命名空间 -->
<mapper namespace="com.story.dao.UserDao">

    <update id="updateUser">
        update user set userName = #{userName}, sign = #{sign}, email = #{email}, gender = #{gender}, avatar = #{avatar}
        where userAccount = #{userAccount};
    </update>

    <update id="updateUserPassword">
        update user set password = #{password} where userAccount = #{userAccount};
    </update>

    <insert id="saveUser">
        insert into user (userName, userAccount, password, roleId, salt, gender, sign)
        values (#{userName}, #{userAccount}, #{password}, #{roleId}, #{salt}, #{gender}, #{sign});
    </insert>

    <select id="getRoleByUserAccount" resultType="com.alibaba.fastjson.JSONObject">
        select roleName from user u, role r where u.userAccount = #{userAccount} and u.roleId = r.roleId;
    </select>

    <select id="listUsers" resultType="com.alibaba.fastjson.JSONObject">
        select u.userAccount, u.userName, u.salt, u.email, r.roleName from user u inner join role r on u.roleId = r.roleId;
    </select>

    <select id="getUserByUserAccount" resultType="com.story.domain.User">
        select * from user where userAccount = #{userAccount};
    </select>

    <select id="listOneUser" resultType="com.alibaba.fastjson.JSONObject">
        select u.userId, u.userAccount, u.userName, u.sign, r.roleName, u.salt, u.avatar, u.gender, u.email from user u inner join role r on u.roleId = r.roleId where userAccount = #{userAccount};
    </select>

    <select id="listTypes" resultType="com.alibaba.fastjson.JSONObject">
        select typeId, typeName from type;
    </select>

    <select id="getUserByUserId" parameterType="Integer" resultType="com.story.domain.User">
        select * from user where userId = #{userId};
    </select>

</mapper>